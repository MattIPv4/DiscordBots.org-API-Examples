Author: 7coil#3175 (190519304972664832)
Message: **Language:** bash
**Requirements:** `curl`
```bash
#!/bin/bash
USERID=
TOKEN=

curl "https://discordbots.org/api/bots/${USERID}/stats" \
    -i -v \
    -X POST \
    -H "Content-Type: application/json" \
    -H "Authorization: ${TOKEN}" \
    -d '{ "server_count": 10 }'
```

Note: `-i -v` are optional

Author: spong#3338 (87164639695110144)
Message: **Language**: Crystal
**Library**: No specific discord library code but atm the only lib is discord.cr
**Code**:
```crystal
require "http/client"
require "json"

token = "dab" # your discordbots.org token
count = 52 # the number of servers your bot is in

headers = HTTP::Headers{"Authorization" => token}

body = {"server_count" => count}.to_json

HTTP::Client.post("https://discordbots.org/api/bots/stats", headers: headers, body: body) do |res|
  status = res.status_code

  if status != 200
    puts "Uh oh! Stats update responded with status #{status}!"
  end
end
```

Author: Habchy#1665 (162780049869635584)
Message: **Language**: AutoHotKey
**Library**: AHK4Discord by Habchy [<:soontm:230160205479018498>]
**Code**:

```autohotkey
;remove maximus and put your bot name
botname = Maximus

Gui, poster:Color, 0x3cb1f9
Gui, poster:Add, Text, x5 y5 w95 h15, %botname% API Poster
Gui, poster:Add, Text, x5 y20 w95 h15, Made by Habchy
Gui, poster:Add, Text, x5 y35 w60 h15, Version 1.3
Gui, poster:Add, Button, x150 y5 w195 h40 gmaxistart, Post
Gui, poster:Show, w349 h49, API Poster
return

posterGuiClose:
goto exiting

maxistart:
serverfile = %A_Temp%\servercount.txt
FileDelete %A_Temp%\servercount.txt
MsgBox, 64, API Poster, API Poster will launch in 3 seconds.,3

InputBox, servers, Server Count Poster, How many servers is %botname% on?
Sleep, 2000
InputBox, shards, Server Shard Poster, How many shards is %botname% on?
Sleep, 2000

FileAppend,
(
{
  "server_count": %servers%,
  "shard_id": 0,
  "shard_count": %shards%
}
), %serverfile%
FileRead, Max, %A_Temp%\servercount.txt

WinHTTP := ComObjCreate("WinHTTP.WinHttpRequest.5.1")
;~ WinHTTP.SetProxy(0)
WinHTTP.Open("POST", "https://discordbots.org/api/bots/YOUR BOTS CLIENT ID/stats", 0)
WinHTTP.SetRequestHeader("Authorization", "YOUR API TOKEN FOR YOUR BOT")
WinHTTP.SetRequestHeader("Content-Type", "application/json")
;linebreak---------------------
WinHTTP.Send(Max)
Result := WinHTTP.ResponseText
Status := WinHTTP.Status

msgbox % "status: " status "`n`nresult: " result
return

exiting:
F4::
MsgBox, 64, API Poster, Shutting down. Goodbye! ðŸ‘‹,2
ExitApp
```

<:no1:341047443149946884> Don't rely on this. Use it until you know how to emplement one of the other automatic ones. Also don't fake server count.

Author: spong#3338 (87164639695110144)
Message: **Language**: Golo (with OkHttp)
**Library**: JDA
**Code**:
```golo
let discordbotsToken = "YOUR DISCORDBOTS.ORG TOKEN"

let client = OkHttpClient()
let jsonMediaType = MediaType.parse("application/json")

function sendStats = |jda| {
    let payload = JSONObject():
        put("server_count", jda: getGuilds(): size())
        
    let info = jda: getShardInfo()
    if (info != null) {
        payload:
            put("shard_id", info: getShardId()):
            put("shard_count", info: getShardTotal())
    }
    
    let body = RequestBody.create(jsonMediaType, payload: toString())
    
    let request = Request.Builder():
        url("https://discordbots.org/api/bots/" + jda: getSelfUser(): getId() + "/stats"):
        addHeader("Authorization", discordbotsToken):
        post(body):
        build()
    
    client: newCall(request): execute()
}
```

Author: iDerp#3616 (159074350350336000)
Message: **Language**: C#
**Library**: DSharpPlus
**Code**: 
```cs
HttpClient client = new HttpClient();
            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "https://discordbots.org/api/bots/<BotID>/stats");
            string json = JsonConvert.SerializeObject(new { server_count = e.Client.Guilds.Count, shard_id = e.Client.ShardId, shard_count = e.Client.ShardCount });
            request.Content = new StringContent(json);
            request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
            request.Headers.Add("Authorization", "<Token>");
            HttpResponseMessage message = await client.SendAsync(request);
            client.Dispose();
```

Author: spong#3338 (87164639695110144)
Message: **Language**: Rust (async with hyper)
**Code**:
```toml
hyper = "0.11.0"
hyper-tls = "0.1.0"
tokio-core = "0.1"
futures = "0.1.14"
```
```rust
extern crate hyper;
extern crate hyper_tls;
extern crate tokio_core;
extern crate futures;

use hyper::{Client, Request, Method};
use hyper::header::ContentType;
use hyper_tls::HttpsConnector;
use tokio_core::reactor::Core;
use futures::Future;

fn main() {
    let client_id: &str;   // bot client id
    let server_count: i32; // server count
    let api_token: &str;   // discordbots.org api token

    // a new tokio core instance, this works as an event loop so obviously you should not create a new instance every time stats are posted
    let mut core = Core::new().unwrap();
    let handle = core.handle();
    let client = Client::configure()
        .connector(HttpsConnector::new(4, &handle).unwrap())
        .build(&handle);

    let uri = format!("https://discordbots.org/api/bots/{}/stats", client_id).parse()
        .expect("could not parse uri");
    let json = format!(r#"{{"server_count":{}}}"#, server_count);

    let mut req = Request::new(Method::Post, uri);
    req.headers_mut().set_raw("Authorization", api_token);
    req.headers_mut().set(ContentType::json());
    req.set_body(json);

    let task = client.request(req).map(|res| {
        println!("Status: {}", res.status());
    });
    core.run(task).expect("an error occurred when sending a request!");
}
```

Author: Neo#5159 (223754830747926528)
Message: **Language**: Neo
**Library**: discord.neo
**Code**: 
```neo
from neo ; import discordbots.org


link neo is: https://discordbots.org/api/bots/&&BOT_ID_CLIENT&&/stats

neo define(neo, bot, link)::
send = next.link.send.info === (&&SERVER_COUNT_BOT_CLIENT%%$&&(link join neo_libary.link))
join_server = 
bot_client&&send&&
leave server = 
bot_client&&send&&```

Author: Erlite#2215 (244165871562391552)
Message: **Language:** C#
**Library:** Discord.NET
**Code:**
```cs
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using (var webclient = new HttpClient())
using (var content = new StringContent($"{{ \"server_count\": {client.Guilds.Count}}}", Encoding.UTF8, "application/json"))
{
    webclient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("token");
    HttpResponseMessage response = await webclient.PostAsync("https://discordbots.org/api/bots/YOUR_BOT_ID_HERE/stats", content);
}
```

**Client is your DiscordSocketClient**
